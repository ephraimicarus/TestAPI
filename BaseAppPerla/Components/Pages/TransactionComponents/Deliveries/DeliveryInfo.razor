@using BaseAppPerla.DTOs
@using BaseAppPerla.Interfaces
@using BaseAppPerla.Models
@inject ITransactionService _transactionService
@inject NavigationManager Navigation

<h3>Informacija isporuke</h3>

@if (isLoading)
{
    <p>Učitavanje...</p>
}
else if (deliveries == null)
{
    <p>Isporuka nije pronađena.</p>
}
else
{
    <MudCard>
        <MudCardContent>
            <MudTable Items="deliveries">
                <HeaderContent>
                    <MudTh>Artikl</MudTh>
                    <MudTh>Isporučeno</MudTh>
                    <MudTh>Potrebno vratiti</MudTh>
                    <MudTh>Rok vraćanja</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd>@context.Inventory?.Item?.Description</MudTd>
                    <MudTd>@context.QuantityDelivered</MudTd>
                    <MudTd>@context.QuantityToReturn</MudTd>
                    <MudTd>@context.TransactionInfo?.DateDue</MudTd>
                </RowTemplate>
            </MudTable>
        </MudCardContent>
    </MudCard>
}

@code {
    [Parameter]
    public int transactionId { get; set; }

    private List<StockReturnDto>? deliveries;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        deliveries = await _transactionService.GetStockDeliveriesByTransactionIdAsync(transactionId);
        isLoading = false;
    }
}
