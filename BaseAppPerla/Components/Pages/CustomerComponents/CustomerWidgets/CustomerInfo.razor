@using BaseAppPerla.Interfaces
@using BaseAppPerla.Models
@inject IInventoryService _inventoryService;
@inject ICustomerService _customerService;

@if (!showEditCustomer)
{
    <MudCard>
        <MudCardContent>
            @if (isLoading)
            {
                <div>Dohvaćam podatke...</div>
            }
            else
            {
                <MudCard>
                    <MudCardHeader>
                        <MudText Typo="Typo.h5">@CustomerName </MudText>
                        <MudCardActions>
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Style="margin-right: 8px; margin-left: 8px"
                                       OnClick="ShowEditCustomer">
                                Edit
                            </MudButton>
                            <MudButton Variant="Variant.Outlined" Color="Color.Secondary">Delete</MudButton>
                        </MudCardActions>
                    </MudCardHeader>
                    <MudTable Items="@customerInventories" Hover="true" Striped="true" Outlined="true">
                        <HeaderContent>
                            <MudTh>Artikl</MudTh>
                            <MudTh>Količina</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>@context.Item!.Description</MudTd>
                            <MudTd>@context.Quantity</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudCard>
            }
        </MudCardContent>
    </MudCard>
}
@if (showEditCustomer)
{
    <div style="margin-top: 1rem;">
        <EditCustomer CustomerId="CustomerId"></EditCustomer>
    </div>

}
@code {
    [Parameter]
    public int CustomerId { get; set; }
    [Parameter]
    public string? CustomerName { get; set; }
    private List<InventoryDto> customerInventories = new();
    private bool isLoading = true;
    private bool showEditCustomer = false;

    protected override async Task OnInitializedAsync()
    {
        var inventories = await _inventoryService.GetInventoriesAsync(CustomerId);
        if (inventories != null)
        {
            isLoading = false;
        }
        customerInventories = inventories!;
    }
    private void ShowEditCustomer()
    {
        showEditCustomer = true;
    }
    private void ResetEditCustomer()
    {
        showEditCustomer = false;
    }
}
