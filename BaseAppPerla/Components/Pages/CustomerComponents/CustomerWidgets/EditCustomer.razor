@using BaseAppPerla.Interfaces
@using BaseAppPerla.Models
@inject ICustomerService _customerService
@inject NavigationManager Navigation

<MudCard>
    <MudCardContent>
        <MudForm>
            <MudTextField @bind-Value="customer.Name" Label="Ime i prezime/naziv" Required="true" />
            <MudTextField @bind-Value="customer.Oib" Label="Oib" Required="true" MaxLength="11" />
            <MudTextField @bind-Value="customer.Email" Label="Email" Required="false" />
            <MudTextField @bind-Value="customer.Phone" Label="Phone Number" Required="false" />
            <MudTextField @bind-Value="customer.Address" Label="Address" Required="false" />
        </MudForm>
    </MudCardContent>
    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="UpdateCustomer">
            @if (isLoading)
            {
                <MudProgressCircular Indeterminate="true" Color="Color.Secondary" />
                <MudText> U TIJEKU.. </MudText>
            }
            else
            {
                <MudText> AŽURIRAJ </MudText>
            }
        </MudButton>
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public int CustomerId { get; set; }
    private Customer customer = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        customer = await _customerService.GetCustomerByIdAsync(CustomerId);
    }

    private async Task UpdateCustomer()
    {
        isLoading = true;
        var result = await _customerService.UpdateCustomerAsync(customer);
        if (result.IsSuccess)
        {
            customer = result.Data!;
            await Application.Current!.MainPage!.DisplayAlert("Uspješno ažuriran klijent", $"Ime: {customer.Name} \nOib: {customer.Oib}", "OK");
            isLoading = false;
            NavigateToCustomers();
        }
        else
        {
            errorMessage = result.ErrorMessage;
            await Application.Current!.MainPage!.DisplayAlert("Error", result.ErrorMessage, "OK");
        }
        isLoading = false;
    }
    private void NavigateToCustomers()
    {
        Navigation.NavigateTo("/customers", true);
    }
}
